import pandas as pd
import numpy as np
from sklearn.linear_model import LinearRegression
from scipy.optimize import minimize
data = pd.read_csv('retail_data.csv')
data['date'] = pd.to_datetime(data['date'])
data = data.set_index('date')
X = data.index.to_numpy().reshape(-1, 1)
y = data['sales'].to_numpy()
model = LinearRegression()
model.fit(X, y)
data['forecast'] = model.predict(X)
def inventory_cost(order_quantities):
    total_cost = 0
    current_inventory = 0
    for i, forecast in enumerate(data['forecast']):
        if forecast > current_inventory:
            stock_out = forecast - current_inventory
            total_cost += stock_out * 10  # Penalty for stock-out
        else:
            overstocked = current_inventory - forecast
            total_cost += overstocked * 2  # Holding cost
        current_inventory += order_quantities[i] - forecast
    return total_cost
initial_order_quantities = np.ones(len(data)) * 100
res = minimize(inventory_cost, initial_order_quantities, method='SLSQP')
optimal_order_quantities = res
